buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'

jar {
    baseName = 'driver-peter-server'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

eclipse {
  jdt {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
  }
}

repositories {
    mavenCentral()
    maven {url 'http://repo.spring.io/release'}
    maven {url 'http://repo.spring.io/snapshot'}
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-social-facebook')
    compile('org.springframework.social:spring-social-security:1.1.0.RELEASE')
    
    compile('org.hibernate:hibernate-validator')
    compile('com.h2database:h2')
    compile('mysql:mysql-connector-java:5.1.26')
    compile('c3p0:c3p0:0.9.1.2')
    
    testCompile('org.apache.httpcomponents:httpclient:4.3')
    testCompile('net.sourceforge.htmlunit:htmlunit:2.15')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    
    // The following line marks embedded tomcat as "provided" so it doesn't
    // go into WEB-INF/lib but goes to WEB-INF/lib-provided. This resolves the conflict
    // between external Tomcat (e.g. Beanstalk) and embedded one so that
    // you can deploy war to the cloud with system server and can run war locally.
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    

}

war {
    baseName = 'driver-peter-server'
    version =  '0.0.9'
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}